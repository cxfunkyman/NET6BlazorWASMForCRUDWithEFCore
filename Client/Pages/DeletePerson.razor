@page "/deleteperson/{Id}"
@using NET6BlazorWASMForCRUDWithEFCore.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Delete Person</h2>

@if (person != null)
{
    <p>Are you sure you want to delete this person named: <b>@person.FirstName @person.LastName</b></p>
    
    <div class="row">
        <table class="table">
            <tr>
                <td>Name</td>
                <td>@person.FirstName @person.LastName</td>
            </tr>
            <tr>
                <td>Email</td>
                <td>@person.Email</td>
            </tr>
            <tr>
                <td>Mobile No</td>
                <td>@person.MobileNo</td>
            </tr>
        </table>
    </div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-danger" @onclick="@Delete" value="Delete" />
            <input type="button" class="btn btn-warning" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    PersonViewModel person = new PersonViewModel();

    protected override async Task OnInitializedAsync() => person = await Http.GetFromJsonAsync<PersonViewModel>("api/person/" + Id);

    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/Person/" + Id);
        bool personResponse = await response.Content.ReadFromJsonAsync<bool>();

        if (personResponse)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("personlist");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("personlist");
    } 
}
